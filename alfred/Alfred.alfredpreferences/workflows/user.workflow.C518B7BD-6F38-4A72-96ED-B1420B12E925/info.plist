<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>lgtm.in.leonhartX</string>
	<key>connections</key>
	<dict>
		<key>2B3040AB-23D7-493E-AE4D-9AFEC554692A</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>88CE4A07-72C2-40F9-823A-F561DDD76650</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>3D1BFDF8-2A41-446C-B74D-28A5FC59C102</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>8A3D4EDD-74EF-4A5E-BAA0-2C10AC779256</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>709692E4-4516-4FA6-9B6A-8953552CE0B2</string>
				<key>modifiers</key>
				<integer>262144</integer>
				<key>modifiersubtext</key>
				<string>Open lgtm pic in browser</string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>495AB42E-3D9D-4CF3-8810-76BD3C3745F1</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>8F1C3E8F-FED8-4834-9240-2A577824A0BC</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>6C5ECF14-774A-49D7-B01B-7DBA0C65E47A</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>2B3040AB-23D7-493E-AE4D-9AFEC554692A</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>709692E4-4516-4FA6-9B6A-8953552CE0B2</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>CA7447C9-FB57-41C9-AECA-6FB45FA00BCE</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>8A3D4EDD-74EF-4A5E-BAA0-2C10AC779256</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>D65476CC-7E82-4AFB-A305-02D0D1FB3059</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>8F1C3E8F-FED8-4834-9240-2A577824A0BC</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>E7403AC6-427C-4CE5-9D5E-86820C406D8A</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>leonhartX</string>
	<key>description</key>
	<string>randomly pick lgtm pics</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>lgtm</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<true/>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>escaping</key>
				<integer>102</integer>
				<key>keyword</key>
				<string>lgtm-in</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<false/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>2</integer>
				<key>runningsubtext</key>
				<string>Picking up lgtm pictures for you, please wait</string>
				<key>script</key>
				<string>require 'net/http'
require 'fileutils'
require 'open-uri'
require 'json'

num = ENV['num'].to_i
list = {items: []}
work_dir = Dir.pwd
FileUtils.rm_rf Dir.glob("#{work_dir}/cache/*")

1.upto(num) do |i|
  id = Net::HTTP.get_response('lgtm.in', '/g')['location'].split('/').last
  uri = URI.parse("https://lgtm.in/i/#{id}")
  req = Net::HTTP::Get.new(uri)
  req['Accept'] = 'application/json'
  http = Net::HTTP.new(uri.host, uri.port)
  http.use_ssl = true
  json = JSON.parse(http.request(req).body)
  suffix = json['actualImageUrl'].include?(".gif")? "gif" : "jpg"

  File.open("cache/#{id}.#{suffix}", 'wb') do |file|
    open(json['actualImageUrl'], 'rb') do |image|
      file.write(image.read)
    end
  end

  item = {
    type: "file:skipcheck",
    title: "#{id}.#{suffix}",
    subtitle: "Likes: #{json['likes']}, Dislikes:#{json['dislikes']}",
    arg: "#{work_dir}/cache/#{id}.#{suffix}",
    icon: { path:"cache/#{id}.#{suffix}" }
  }
  list[:items].push item
end

print list.to_json</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string>randomly pick lgtm.in pics and paste the markdown</string>
				<key>title</key>
				<string>lgtm-in</string>
				<key>type</key>
				<integer>2</integer>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>3D1BFDF8-2A41-446C-B74D-28A5FC59C102</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>autopaste</key>
				<true/>
				<key>clipboardtext</key>
				<string>[![LGTM](https://lgtm.in/p/{query})](https://lgtm.in/i/{query})</string>
				<key>transient</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.clipboard</string>
			<key>uid</key>
			<string>D65476CC-7E82-4AFB-A305-02D0D1FB3059</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>query = ARGV[0]

print query.split('/').last.split('.').first</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>2</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>8A3D4EDD-74EF-4A5E-BAA0-2C10AC779256</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>browser</key>
				<string></string>
				<key>spaces</key>
				<string></string>
				<key>url</key>
				<string>https://lgtm.in/i/{query}</string>
				<key>utf8</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.openurl</string>
			<key>uid</key>
			<string>CA7447C9-FB57-41C9-AECA-6FB45FA00BCE</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>query = ARGV[0]

print query.split('/').last.split('.').first</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>2</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>709692E4-4516-4FA6-9B6A-8953552CE0B2</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>query = ARGV[0]

print query.split("/").last.gsub(/_/,"/")</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>2</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>2B3040AB-23D7-493E-AE4D-9AFEC554692A</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<true/>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>escaping</key>
				<integer>102</integer>
				<key>keyword</key>
				<string>lgtm-gif</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Picking up lgtm pictures for you, please wait</string>
				<key>script</key>
				<string>require 'net/http'
require 'fileutils'
require 'open-uri'
require 'json'

num = ENV['num'].to_i
list = {items: []}
work_dir = Dir.pwd
FileUtils.rm_rf Dir.glob("#{work_dir}/cache/*")

1.upto(num) do |i|
  json = JSON.parse(Net::HTTP.get URI.parse("http://takashicompany.com/api/lgtm/"))
  id = json['lgtm_image'].split('/').last.gsub(/\//, "_")
  File.open("cache/#{id}", 'wb') do |file|
    open(json['lgtm_image'], 'rb') do |image|
      file.write(image.read)
    end
  end

  item = {
    type: "file:skipcheck",
    title: id,
    subtitle: json['lgtm_image'],
    arg: "#{work_dir}/cache/#{id}",
    icon: { path:"cache/#{id}" }
  }
  list[:items].push item
end

print list.to_json</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string>randomly pick gif lgtm and paste the markdown</string>
				<key>title</key>
				<string>lgtm-gif</string>
				<key>type</key>
				<integer>2</integer>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>6C5ECF14-774A-49D7-B01B-7DBA0C65E47A</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>autopaste</key>
				<true/>
				<key>clipboardtext</key>
				<string>[![LGTM! Please wait until the image is uploaded...](https://dl.dropboxusercontent.com/1/view/{query})](http://takashicompany.com/lgtm)</string>
				<key>transient</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.clipboard</string>
			<key>uid</key>
			<string>88CE4A07-72C2-40F9-823A-F561DDD76650</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>68</integer>
				<key>script</key>
				<string>import sys

query = sys.argv[1]
from plistlib import readPlist, writePlist

info = readPlist('info.plist')
info['variables']['num'] = query
writePlist(info, 'info.plist')
sys.stdout.write(query)</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>3</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>8F1C3E8F-FED8-4834-9240-2A577824A0BC</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>lastpathcomponent</key>
				<false/>
				<key>onlyshowifquerypopulated</key>
				<false/>
				<key>removeextension</key>
				<false/>
				<key>text</key>
				<string>default number of pics set to {query}</string>
				<key>title</key>
				<string>lgtm</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.notification</string>
			<key>uid</key>
			<string>E7403AC6-427C-4CE5-9D5E-86820C406D8A</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>lgtm-set</string>
				<key>subtext</key>
				<string>set default pic numbers</string>
				<key>text</key>
				<string>lgtm-set</string>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>495AB42E-3D9D-4CF3-8810-76BD3C3745F1</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>workflow to get lgtm picture more easily.</string>
	<key>uidata</key>
	<dict>
		<key>2B3040AB-23D7-493E-AE4D-9AFEC554692A</key>
		<dict>
			<key>xpos</key>
			<integer>520</integer>
			<key>ypos</key>
			<integer>350</integer>
		</dict>
		<key>3D1BFDF8-2A41-446C-B74D-28A5FC59C102</key>
		<dict>
			<key>xpos</key>
			<integer>150</integer>
			<key>ypos</key>
			<integer>80</integer>
		</dict>
		<key>495AB42E-3D9D-4CF3-8810-76BD3C3745F1</key>
		<dict>
			<key>xpos</key>
			<integer>150</integer>
			<key>ypos</key>
			<integer>470</integer>
		</dict>
		<key>6C5ECF14-774A-49D7-B01B-7DBA0C65E47A</key>
		<dict>
			<key>xpos</key>
			<integer>150</integer>
			<key>ypos</key>
			<integer>350</integer>
		</dict>
		<key>709692E4-4516-4FA6-9B6A-8953552CE0B2</key>
		<dict>
			<key>xpos</key>
			<integer>520</integer>
			<key>ypos</key>
			<integer>200</integer>
		</dict>
		<key>88CE4A07-72C2-40F9-823A-F561DDD76650</key>
		<dict>
			<key>xpos</key>
			<integer>780</integer>
			<key>ypos</key>
			<integer>350</integer>
		</dict>
		<key>8A3D4EDD-74EF-4A5E-BAA0-2C10AC779256</key>
		<dict>
			<key>xpos</key>
			<integer>520</integer>
			<key>ypos</key>
			<integer>80</integer>
		</dict>
		<key>8F1C3E8F-FED8-4834-9240-2A577824A0BC</key>
		<dict>
			<key>xpos</key>
			<integer>520</integer>
			<key>ypos</key>
			<integer>470</integer>
		</dict>
		<key>CA7447C9-FB57-41C9-AECA-6FB45FA00BCE</key>
		<dict>
			<key>xpos</key>
			<integer>780</integer>
			<key>ypos</key>
			<integer>200</integer>
		</dict>
		<key>D65476CC-7E82-4AFB-A305-02D0D1FB3059</key>
		<dict>
			<key>xpos</key>
			<integer>780</integer>
			<key>ypos</key>
			<integer>80</integer>
		</dict>
		<key>E7403AC6-427C-4CE5-9D5E-86820C406D8A</key>
		<dict>
			<key>xpos</key>
			<integer>780</integer>
			<key>ypos</key>
			<integer>470</integer>
		</dict>
	</dict>
	<key>variables</key>
	<dict>
		<key>num</key>
		<string>3</string>
	</dict>
	<key>version</key>
	<string>1.0</string>
	<key>webaddress</key>
	<string></string>
</dict>
</plist>
